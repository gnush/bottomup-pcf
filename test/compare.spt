module compareTests

language TypedLambda

test many bound vars [[
	module foo
	[[\x:Num. (((((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))+(((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))))+((((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))+(((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))))]]
]] run type to Function(TNum(), TNum())

test many bound vars' [[
    module foo
    [[\x:Num. (((((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))+(((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))))+((((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))+(((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))))]]
]] run type' to Function(TNum(), TNum())

test many bound vars topdown [[
    module foo
    [[\x:Num. (((((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))+(((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))))+((((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))+(((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))))]]
]] run tCheck to Function(TNum(), TNum())

test many unbound vars [[
    module foo
    (((((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))+(((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))))+((((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))+(((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))))+(((((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))+(((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))))+((((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))+(((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))))
]] run typeinfer to Module("foo", ["Unbound variable"])

test many unbound vars' [[
    module foo
    [[(((((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))+(((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))))+((((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))+(((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))))+(((((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))+(((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))))+((((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))+(((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))))]]
]] run typeinfer' to "Unbound variable"

test many unbound vars topdown [[
    module foo
    [[(((((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))+(((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))))+((((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))+(((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))))+(((((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))+(((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))))+((((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))+(((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))))+((((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))+(((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x))))+((((x+x)+(x+x))+((x+x)+(x+x)))+(((x+x)+(x+x))+((x+x)+(x+x)))))))))]]
]] run tCheck to "Unbound variable"